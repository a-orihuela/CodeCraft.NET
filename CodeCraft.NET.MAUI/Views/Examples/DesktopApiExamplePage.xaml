<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="CodeCraft.NET.MAUI.Views.Examples.DesktopApiExamplePage"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:CodeCraft.NET.MAUI.ViewModels.Examples"
             Title="DesktopAPI Integration Demo">

    <ScrollView>
        <StackLayout Padding="20" Spacing="24">
            
            <!-- Header Section -->
            <Label Text="DesktopAPI Integration Demo" 
                   Style="{StaticResource PageHeaderStyle}" />
            <Label Text="Direct service consumption without HTTP overhead - showcasing SOLID principles" 
                   Style="{StaticResource PageSubtitleStyle}" />

            <!-- Status Card -->
            <Frame Style="{StaticResource ElevatedCardStyle}">
                <StackLayout Spacing="16">
                    <Label Text="Service Status" 
                           Style="{StaticResource TokenSubheading}" />
                    
                    <Label Text="{Binding StatusMessage}" 
                           Style="{StaticResource TokenBody}"
                           FontFamily="{StaticResource PrimaryFontSemibold}" />
                    
                    <ActivityIndicator IsVisible="{Binding IsLoading}" 
                                     IsRunning="{Binding IsLoading}"
                                     Color="{StaticResource Primary}" />
                    
                    <Border Style="{StaticResource InputBorderStyle}" 
                            BackgroundColor="{AppThemeBinding Light={StaticResource Gray50}, Dark={StaticResource Gray900}}">
                        <Label Text="{Binding LastOperationResult}" 
                               Style="{StaticResource TokenCaption}"
                               FontFamily="{StaticResource MonospaceFont}" />
                    </Border>
                </StackLayout>
            </Frame>

            <!-- Basic CRUD Operations -->
            <Frame Style="{StaticResource CardStyle}">
                <StackLayout Spacing="16">
                    <Label Text="Basic CRUD Operations" 
                           Style="{StaticResource TokenSubheading}" />
                    <Label Text="Auto-generated services with standard CRUD operations via MediatR" 
                           Style="{StaticResource TokenCaption}" />
                    
                    <Grid ColumnDefinitions="*,*" ColumnSpacing="12" RowDefinitions="Auto,Auto,Auto" RowSpacing="12">
                        <!-- Row 1: Create and Read -->
                        <Button Grid.Row="0" Grid.Column="0" 
                                Text="Create Food" 
                                Style="{StaticResource CreateButtonStyle}"
                                Command="{Binding CreateBasicFoodCommand}" />
                        
                        <Button Grid.Row="0" Grid.Column="1" 
                                Text="Get Food" 
                                Style="{StaticResource ViewButtonStyle}"
                                Command="{Binding GetBasicFoodCommand}" />
                        
                        <!-- Row 2: Update and Delete -->
                        <Button Grid.Row="1" Grid.Column="0" 
                                Text="Update Food" 
                                Style="{StaticResource EditButtonStyle}"
                                Command="{Binding UpdateBasicFoodCommand}" />
                        
                        <Button Grid.Row="1" Grid.Column="1" 
                                Text="Delete Food" 
                                Style="{StaticResource DeleteButtonStyle}"
                                Command="{Binding DeleteBasicFoodCommand}" />

                        <!-- Row 3: Get with relations -->
                        <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                                Text="Get with Related Data" 
                                Style="{StaticResource OutlinePrimaryButtonStyle}"
                                Command="{Binding GetFoodWithRelatedCommand}" />
                    </Grid>
                </StackLayout>
            </Frame>

            <!-- Orchestration Services -->
            <Frame Style="{StaticResource CardStyle}">
                <StackLayout Spacing="16">
                    <Label Text="Orchestration Services" 
                           Style="{StaticResource TokenSubheading}" />
                    <Label Text="Custom services with complex business logic and enhanced features" 
                           Style="{StaticResource TokenCaption}" />
                    
                    <Grid ColumnDefinitions="*,*" ColumnSpacing="12" RowDefinitions="Auto,Auto" RowSpacing="12">
                        <!-- Row 1: Food Orchestration -->
                        <Button Grid.Row="0" Grid.Column="0" 
                                Text="Create Ketogenic Food" 
                                Style="{StaticResource CreateButtonStyle}"
                                Command="{Binding CreateKetogenicFoodCommand}" />
                        
                        <Button Grid.Row="0" Grid.Column="1" 
                                Text="Get Enhanced Food" 
                                Style="{StaticResource ViewButtonStyle}"
                                Command="{Binding GetEnhancedFoodCommand}" />
                        
                        <!-- Row 2: Plan Orchestration -->
                        <Button Grid.Row="1" Grid.Column="0" 
                                Text="Create Optimized Plan" 
                                Style="{StaticResource CreateButtonStyle}"
                                Command="{Binding CreateOptimizedPlanCommand}" />
                        
                        <Button Grid.Row="1" Grid.Column="1" 
                                Text="Analyze Plan" 
                                Style="{StaticResource ViewButtonStyle}"
                                Command="{Binding AnalyzePlanCommand}" />
                    </Grid>

                    <!-- Batch Operations -->
                    <Button Text="Batch Create Foods" 
                            Style="{StaticResource OutlineSecondaryButtonStyle}"
                            Command="{Binding BatchCreateFoodsCommand}"
                            Margin="0,12,0,0" />
                </StackLayout>
            </Frame>

            <!-- Architecture Showcase -->
            <Frame Style="{StaticResource StatCardStyle}">
                <StackLayout Spacing="16">
                    <Label Text="SOLID Architecture Benefits" 
                           Style="{StaticResource TokenSubheading}"
                           TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                    
                    <StackLayout Spacing="8">
                        <Label Text="S - Single Responsibility: Each service has specific concerns" 
                               Style="{StaticResource TokenCaption}"
                               TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                        <Label Text="O - Open/Closed: Easy to extend via Custom folder without modifying existing code" 
                               Style="{StaticResource TokenCaption}"
                               TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                        <Label Text="D - Dependency Inversion: MAUI depends on DesktopAPI abstractions" 
                               Style="{StaticResource TokenCaption}"
                               TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                        <Label Text="No HTTP overhead: Direct in-memory service calls for maximum performance" 
                               Style="{StaticResource TokenCaption}"
                               TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                        <Label Text="No business logic duplication: Shared rules via Application layer" 
                               Style="{StaticResource TokenCaption}"
                               TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                        <Label Text="Type-safe operations: Compile-time validation and IntelliSense" 
                               Style="{StaticResource TokenCaption}"
                               TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                    </StackLayout>
                </StackLayout>
            </Frame>

            <!-- Service Comparison -->
            <Frame Style="{StaticResource CardStyle}">
                <StackLayout Spacing="16">
                    <Label Text="Service Layer Comparison" 
                           Style="{StaticResource TokenSubheading}" />
                    
                    <!-- Basic Services -->
                    <Frame Style="{StaticResource CompactCardStyle}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource Gray50}, Dark={StaticResource Gray800}}">
                        <StackLayout Spacing="8">
                            <Label Text="Auto-Generated Basic Services" 
                                   Style="{StaticResource TokenBody}"
                                   FontFamily="{StaticResource PrimaryFontSemibold}" />
                            <Label Text="• Standard CRUD operations via MediatR" 
                                   Style="{StaticResource TokenCaption}" />
                            <Label Text="• Automatic logging and error handling" 
                                   Style="{StaticResource TokenCaption}" />
                            <Label Text="• Result pattern for consistent responses" 
                                   Style="{StaticResource TokenCaption}" />
                            <Label Text="• Perfect for simple data operations" 
                                   Style="{StaticResource TokenCaption}" />
                        </StackLayout>
                    </Frame>

                    <!-- Orchestration Services -->
                    <Frame Style="{StaticResource CompactCardStyle}"
                           BackgroundColor="{AppThemeBinding Light={StaticResource PrimaryLight}, Dark={StaticResource PrimaryDark}}">
                        <StackLayout Spacing="8">
                            <Label Text="Custom Orchestration Services" 
                                   Style="{StaticResource TokenBody}"
                                   FontFamily="{StaticResource PrimaryFontSemibold}"
                                   TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                            <Label Text="• Complex business logic implementation" 
                                   Style="{StaticResource TokenCaption}"
                                   TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                            <Label Text="• Multi-step operations with validation" 
                                   Style="{StaticResource TokenCaption}"
                                   TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                            <Label Text="• Enhanced DTOs with computed fields" 
                                   Style="{StaticResource TokenCaption}"
                                   TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                            <Label Text="• Domain service integration" 
                                   Style="{StaticResource TokenCaption}"
                                   TextColor="{AppThemeBinding Light={StaticResource PrimaryDark}, Dark={StaticResource PrimaryLight}}" />
                        </StackLayout>
                    </Frame>
                </StackLayout>
            </Frame>

            <!-- Operation History -->
            <Frame Style="{StaticResource CardStyle}">
                <StackLayout Spacing="16">
                    <Grid ColumnDefinitions="*,Auto">
                        <Label Grid.Column="0" Text="Real-time Operation Log" 
                               Style="{StaticResource TokenSubheading}" />
                        <Button Grid.Column="1" 
                                Text="Clear" 
                                Style="{StaticResource CancelButtonStyle}"
                                Command="{Binding ClearHistoryCommand}"
                                Padding="12,6" />
                    </Grid>
                    
                    <Border Style="{StaticResource InputBorderStyle}" 
                            BackgroundColor="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Black}}">
                        <CollectionView ItemsSource="{Binding OperationHistory}"
                                        HeightRequest="200"
                                        BackgroundColor="Transparent">
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid ColumnDefinitions="*" Padding="8,4">
                                        <Label Grid.Column="0" 
                                               Text="{Binding}"
                                               FontSize="12"
                                               FontFamily="{StaticResource MonospaceFont}"
                                               TextColor="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray200}}" />
                                    </Grid>
                                </DataTemplate>
                            </CollectionView.ItemTemplate>
                        </CollectionView>
                    </Border>
                    
                    <Label Text="Live trace of DesktopAPI service calls, logging, and results" 
                           Style="{StaticResource TokenCaption}"
                           HorizontalOptions="Center" />
                </StackLayout>
            </Frame>

            <!-- Footer -->
            <Frame Style="{StaticResource CompactCardStyle}" 
                   Margin="0,24,0,48">
                <StackLayout>
                    <Label Text="Built with DesktopAPI Architecture" 
                           Style="{StaticResource TokenSubheading}" 
                           HorizontalTextAlignment="Center" />
                    <Label Text="Demonstrating in-memory service consumption with SOLID principles and zero HTTP overhead" 
                           Style="{StaticResource TokenCaption}" 
                           HorizontalTextAlignment="Center" />
                </StackLayout>
            </Frame>

        </StackLayout>
    </ScrollView>

</ContentPage>