// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using CodeCraft.NET.Application.CQRS.Features.LogConfigurations.Commands.Create;
using CodeCraft.NET.Application.CQRS.Features.LogConfigurations.Commands.Delete;
using CodeCraft.NET.Application.CQRS.Features.LogConfigurations.Commands.Update;
using CodeCraft.NET.Application.CQRS.Features.LogConfigurations.Queries.GetLogConfigurationById;
using CodeCraft.NET.Application.CQRS.Features.LogConfigurations.Queries.GetLogConfigurationWithRelated;
using CodeCraft.NET.Application.DTOs.Custom.LogConfigurations;
using CodeCraft.NET.Application.DTOs.LogConfigurations;
using CodeCraft.NET.Services.Base;
using CodeCraft.NET.Services.Models;
using MediatR;
using Microsoft.Extensions.Logging;


namespace CodeCraft.NET.Services.Services
{
    /// <summary>
    /// Service for LogConfiguration operations using CQRS pattern.
    /// Provides CRUD operations with logging and error handling.
    /// </summary>
    public partial class LogConfigurationService : BaseEntityService<LogConfigurationCreate, LogConfigurationUpdate, LogConfigurationDto, LogConfigurationWithRelatedDto>
    {
        public LogConfigurationService(IMediator mediator, ILogger<LogConfigurationService> logger) 
            : base(mediator, logger, "LogConfiguration")
        {
        }

        protected override object CreateDeleteCommand(int id)
        {
            return new LogConfigurationDelete { Id = id };
        }

        protected override object CreateGetByIdQuery(int id)
        {
            return new GetLogConfigurationByIdQuery { Id = id };
        }

        protected override object CreateGetWithRelatedQuery(int id)
        {
            return new GetLogConfigurationWithRelatedQuery { Id = id };
        }
    }
}