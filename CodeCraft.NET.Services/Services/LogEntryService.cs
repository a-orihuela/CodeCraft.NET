// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using CodeCraft.NET.Application.CQRS.Features.LogEntries.Commands.Create;
using CodeCraft.NET.Application.CQRS.Features.LogEntries.Commands.Delete;
using CodeCraft.NET.Application.CQRS.Features.LogEntries.Commands.Update;
using CodeCraft.NET.Application.CQRS.Features.LogEntries.Queries.GetLogEntryById;
using CodeCraft.NET.Application.CQRS.Features.LogEntries.Queries.GetLogEntryWithRelated;
using CodeCraft.NET.Application.DTOs.Custom.LogEntries;
using CodeCraft.NET.Application.DTOs.LogEntries;
using CodeCraft.NET.Services.Base;
using CodeCraft.NET.Services.Models;
using MediatR;
using Microsoft.Extensions.Logging;


namespace CodeCraft.NET.Services.Services
{
    /// <summary>
    /// Service for LogEntry operations using CQRS pattern.
    /// Provides CRUD operations with logging and error handling.
    /// </summary>
    public partial class LogEntryService : BaseEntityService<LogEntryCreate, LogEntryUpdate, LogEntryDto, LogEntryWithRelatedDto>
    {
        public LogEntryService(IMediator mediator, ILogger<LogEntryService> logger) 
            : base(mediator, logger, "LogEntry")
        {
        }

        protected override object CreateDeleteCommand(int id)
        {
            return new LogEntryDelete { Id = id };
        }

        protected override object CreateGetByIdQuery(int id)
        {
            return new GetLogEntryByIdQuery { Id = id };
        }

        protected override object CreateGetWithRelatedQuery(int id)
        {
            return new GetLogEntryWithRelatedQuery { Id = id };
        }
    }
}