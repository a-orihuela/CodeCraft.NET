// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

{{~ usings = [
    "MediatR",
    "Microsoft.Extensions.Logging",
    "CodeCraft.NET.Services.Base",
    "CodeCraft.NET.Services.Models",
    ApplicationProjectName + ".DTOs." + NamePlural,
    ApplicationProjectName + ".DTOs.Custom." + NamePlural,
    ApplicationProjectName + ".CQRS.Features." + NamePlural + ".Commands.Create",
    ApplicationProjectName + ".CQRS.Features." + NamePlural + ".Commands.Delete", 
    ApplicationProjectName + ".CQRS.Features." + NamePlural + ".Commands.Update",
    ApplicationProjectName + ".CQRS.Features." + NamePlural + ".Queries.Get" + Name + "ById",
    ApplicationProjectName + ".CQRS.Features." + NamePlural + ".Queries.Get" + Name + "WithRelated"
] ~}}
{{~ include "CodeCraft.NET.Generator.Templates.Partials._render_usings.scriban" ~}}

namespace CodeCraft.NET.Services.Services
{
    /// <summary>
    /// Service for {{ Name }} operations using CQRS pattern.
    /// Provides CRUD operations with logging and error handling.
    /// </summary>
    public partial class {{ Name }}Service : BaseEntityService<{{ Name }}Create, {{ Name }}Update, {{ Name }}Dto, {{ Name }}WithRelatedDto>
    {
        public {{ Name }}Service(IMediator mediator, ILogger<{{ Name }}Service> logger) 
            : base(mediator, logger, "{{ Name }}")
        {
        }

        protected override object CreateDeleteCommand(int id)
        {
            return new {{ Name }}Delete { Id = id };
        }

        protected override object CreateGetByIdQuery(int id)
        {
            return new Get{{ Name }}ByIdQuery { Id = id };
        }

        protected override object CreateGetWithRelatedQuery(int id)
        {
            return new Get{{ Name }}WithRelatedQuery { Id = id };
        }
    }
}