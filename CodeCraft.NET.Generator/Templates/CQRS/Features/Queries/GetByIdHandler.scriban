// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using MediatR;
using AutoMapper;
using {{ ApplicationProjectName }}.Contracts.Persistence.Repositories;
using {{ ApplicationProjectName }}.DTOs.{{ Name }};
using {{ DomainProjectName }}.Model;
using {{ ApplicationProjectName }}.Middleware.Exceptions;

namespace {{ ApplicationProjectName }}.CQRS.Features.{{ NamePlural }}.Queries.Get{{ Name }}ById
{
	public partial class Get{{ Name }}ByIdHandler : IRequestHandler<Get{{ Name }}ByIdQuery, {{ Name }}Dto?>
	{
		private readonly I{{ Name }}Repository _repository;
		private readonly IMapper _mapper;

		public Get{{ Name }}ByIdHandler(I{{ Name }}Repository repository, IMapper mapper)
		{
			_repository = repository;
			_mapper = mapper;
		}

		public async Task<{{ Name }}Dto?> Handle(Get{{ Name }}ByIdQuery request, CancellationToken cancellationToken)
		{
			var entity = await _repository.GetByIdAsync(request.Id);
			if (entity == null)
				return null;

			return _mapper.Map<{{ Name }}Dto>(entity);
		}
	}
}
