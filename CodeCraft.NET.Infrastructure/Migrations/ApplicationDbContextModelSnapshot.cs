// <auto-generated />
using System;
using CodeCraft.NET.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
//#if (DatabaseProvider == "SqlServer")
using Microsoft.EntityFrameworkCore.Metadata;
//#endif
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeCraft.NET.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
//#if (DatabaseProvider == "SqlServer")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                .HasAnnotation("Relational:MaxIdentifierLength", 63);
//
//            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);
//#endif

            modelBuilder.Entity("CodeCraft.NET.Application.DTOs.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(450)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<int>("AccessFailedCount")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("int");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("integer");
//#endif

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<string>("Email")
                        .HasMaxLength(256)
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(256)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("character varying(256)");
//#endif

                    b.Property<bool>("EmailConfirmed")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("bit");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("boolean");
//#endif

                    b.Property<bool>("LockoutEnabled")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("bit");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("boolean");
//#endif

                    b.Property<DateTimeOffset?>("LockoutEnd")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("datetimeoffset");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("timestamp with time zone");
//#endif

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(256)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("character varying(256)");
//#endif

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(256)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("character varying(256)");
//#endif

                    b.Property<string>("PasswordHash")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<string>("PhoneNumber")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<bool>("PhoneNumberConfirmed")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("bit");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("boolean");
//#endif

                    b.Property<string>("SecurityStamp")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<bool>("TwoFactorEnabled")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("bit");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("boolean");
//#endif

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(256)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("character varying(256)");
//#endif

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
//#if (DatabaseProvider == "SqlServer")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");
//#endif

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f284b3fd-f2cf-476e-a9b6-6560689cc48c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5d2b8e91-1b2a-4b52-aabc-10a5f9f00002",
                            Email = "admin@localhost.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@LOCALHOST.COM",
                            NormalizedUserName = "ADMINUSER",
                            PasswordHash = "AQAAAAIAAYagAAAAECfeHyfErMhDMdbJOf5KULBdgI6ohallQVWi6k3fYjzQYhmAxlbO/fNzTgDOn04zqA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3c1a5d52-b4e8-4b60-bafe-35f6a7e00001",
                            TwoFactorEnabled = false,
                            UserName = "adminuser"
                        });
                });

            modelBuilder.Entity("CodeCraft.NET.Domain.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("uniqueidentifier");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("uuid");
//#endif

                    b.Property<string>("CreatedBy")
                        .IsRequired()
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<DateTime>("CreatedDate")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("datetime2");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("timestamp without time zone");
//#endif

                    b.Property<string>("Email")
                        .IsRequired()
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<string>("FirstName")
                        .IsRequired()
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<string>("LastModifiedBy")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.Property<DateTime?>("LastModifiedDate")
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("datetime2");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("timestamp without time zone");
//#endif

                    b.Property<string>("LastName")
                        .IsRequired()
//#if (DatabaseProvider == "SqlServer")
                        .HasColumnType("nvarchar(max)");
//#endif
//#if (DatabaseProvider == "PostgreSQL")
//                        .HasColumnType("text");
//#endif

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

#pragma warning restore 612, 618
        }
    }
}
