// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using CodeCraft.NET.Application.CQRS.Base.Specifications;
using CodeCraft.NET.Domain.Model;

namespace CodeCraft.NET.Application.CQRS.Specifications.LogConfigurations;

public partial class LogConfigurationSpecification : BaseSpecification<LogConfiguration>
{
    public LogConfigurationSpecification(LogConfigurationSpecificationParams parameters)
        : base(x =>
            string.IsNullOrWhiteSpace(parameters.Search) 
            || (x.Component != null && x.Component.ToLower().Contains(parameters.Search.ToLower()))
            || (x.NamespacePath != null && x.NamespacePath.ToLower().Contains(parameters.Search.ToLower()))
            || (x.LogFilePath != null && x.LogFilePath.ToLower().Contains(parameters.Search.ToLower()))
            || (x.LogFormat != null && x.LogFormat.ToLower().Contains(parameters.Search.ToLower()))
            || (x.Description != null && x.Description.ToLower().Contains(parameters.Search.ToLower()))
            || (x.CreatedBy != null && x.CreatedBy.ToLower().Contains(parameters.Search.ToLower()))
            || (x.ModifiedBy != null && x.ModifiedBy.ToLower().Contains(parameters.Search.ToLower()))
        )
    {
        Paging(parameters.PageSize * (parameters.PageIndex - 1), parameters.PageSize);

        if (!string.IsNullOrEmpty(parameters.Sort))
        {
            switch (parameters.Sort.ToLower())
            {
                case "idAsc":
                    AddOrderBy(x => x.Id);
                    break;
                case "idDesc":
                    AddOrderByDescending(x => x.Id);
                    break;
                default:
                    AddOrderBy(x => x.Id);
                    break;
            }
        }
    }
}
