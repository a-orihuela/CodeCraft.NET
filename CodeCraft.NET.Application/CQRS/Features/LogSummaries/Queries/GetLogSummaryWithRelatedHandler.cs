// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using MediatR;
using AutoMapper;
using CodeCraft.NET.Application.DTOs.Custom.LogSummaries;
using CodeCraft.NET.Domain.Model;
using CodeCraft.NET.Application.Contracts.Persistence.Repositories;
using CodeCraft.NET.Application.CQRS.Specifications.LogSummaries;

namespace CodeCraft.NET.Application.CQRS.Features.LogSummaries.Queries.GetLogSummaryWithRelated
{
	public class GetLogSummaryWithRelatedHandler : IRequestHandler<GetLogSummaryWithRelatedQuery, LogSummaryWithRelatedDto?>
	{
		private readonly ILogSummaryRepository _repository;
		private readonly IMapper _mapper;

		public GetLogSummaryWithRelatedHandler(ILogSummaryRepository repository, IMapper mapper)
		{
			_repository = repository;
			_mapper = mapper;
		}

		public async Task<LogSummaryWithRelatedDto?> Handle(GetLogSummaryWithRelatedQuery request, CancellationToken cancellationToken)
		{
			var spec = new LogSummaryWithRelatedSpecification(new LogSummarySpecificationParams { Id = request.Id });
			var entity = await _repository.GetByIdWithSpecifications(spec);
			if (entity == null)
				return null;

			return _mapper.Map<LogSummaryWithRelatedDto>(entity);
		}
	}
}