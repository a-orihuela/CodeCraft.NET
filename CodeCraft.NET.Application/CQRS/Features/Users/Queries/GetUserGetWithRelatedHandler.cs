// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using MediatR;
using CodeCraft.NET.Domain.Model;
using CodeCraft.NET.Application.Contracts.Persistence.Repositories;
using CodeCraft.NET.Application.CQRS.Specifications.Users;
using System.Threading;
using System.Threading.Tasks;

namespace CodeCraft.NET.Application.CQRS.Features.Users.Queries.GetUserWithRelated;

public class GetUserWithRelatedHandler : IRequestHandler<GetUserWithRelatedQuery, User>
{
    private readonly IUserRepository _repository;

    public GetUserWithRelatedHandler(IUserRepository repository)
    {
        _repository = repository;
    }

    public async Task<User> Handle(GetUserWithRelatedQuery request, CancellationToken cancellationToken)
    {
        var spec = new UserWithRelatedSpecification(new UserSpecificationParams { Id = request.Id });
        var entity = await _repository.GetByIdWithSpecifications(spec);
        return entity;
    }
}