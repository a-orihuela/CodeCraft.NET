// <auto-generated>
//     This code was generated by CodeCraft.NET.
//     Manual changes to this file may be overwritten.
// </auto-generated>

using MediatR;
using AutoMapper;
using CodeCraft.NET.Application.Contracts.Persistence.Repositories;
using CodeCraft.NET.Application.DTOs.LogConfigurations;
using CodeCraft.NET.Domain.Model;
using CodeCraft.NET.Application.Middleware.Exceptions;

namespace CodeCraft.NET.Application.CQRS.Features.LogConfigurations.Queries.GetLogConfigurationById
{
	public partial class GetLogConfigurationByIdHandler : IRequestHandler<GetLogConfigurationByIdQuery, LogConfigurationDto?>
	{
		private readonly ILogConfigurationRepository _repository;
		private readonly IMapper _mapper;

		public GetLogConfigurationByIdHandler(ILogConfigurationRepository repository, IMapper mapper)
		{
			_repository = repository;
			_mapper = mapper;
		}

		public async Task<LogConfigurationDto?> Handle(GetLogConfigurationByIdQuery request, CancellationToken cancellationToken)
		{
			var entity = await _repository.GetByIdAsync(request.Id);
			if (entity == null)
				return null;

			return _mapper.Map<LogConfigurationDto>(entity);
		}
	}
}
